name: Push Docker Image and nginx config

on:
  push:
    tags:
      - '*'
      - '!*-test'
  
env:
  AWS_REGION: eu-north-1
  AWS_ACCOUNT_ID: 267348411096

permissions:
  id-token: write
  contents: read

jobs:
  build-car-app:
    name: Build car-app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
        
      - name: Install dependencies
        working-directory: server/car-app
        run: go get .

      - name: Build
        working-directory: server/car-app
        run: go build ./...

  build-market-app:
    name: Build market-app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
      
      - name: Install dependencies
        working-directory: server/market-app
        run: npm install
      
      - name: Build
        working-directory: server/market-app
        run: npm run build

  docker-build-and-push-car-app:
    name: Build and Push car-app Docker Image
    needs: build-car-app
    runs-on: ubuntu-latest
 
    outputs:
      aws_ecr_car_app_image_name: ${{ steps.ecr-vars.outputs.aws_ecr_image_name }}
      aws_ecr_car_app_repository_tag: ${{ steps.ecr-vars.outputs.aws_ecr_repository_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionRole
          aws-region: ${{ env.AWS_REGION }} 

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR variables
        id: ecr-vars
        run: |
          AWS_ECR_REGISTRY=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          AWS_ECR_IMAGE_NAME=danielmanciu/car-app-server
          AWS_ECR_IMAGE_VERSION=${{ github.ref_name }}

          echo "aws_ecr_registry=${AWS_ECR_REGISTRY}" >> "$GITHUB_OUTPUT"
          echo "aws_ecr_image_name=${AWS_ECR_IMAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "aws_ecr_repository_tag=${AWS_ECR_REGISTRY}/${AWS_ECR_IMAGE_NAME}:${AWS_ECR_IMAGE_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server/car-app
          push: true
          tags: ${{ steps.ecr-vars.outputs.aws_ecr_repository_tag }}
    
  docker-build-and-push-market-app:
    name: Build and Push market-app Docker Image
    needs: build-market-app
    runs-on: ubuntu-latest
    
    outputs:
      aws_ecr_market_app_image_name: ${{ steps.ecr-vars.outputs.aws_ecr_image_name }}
      aws_ecr_market_app_repository_tag: ${{ steps.ecr-vars.outputs.aws_ecr_repository_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionRole
          aws-region: ${{ env.AWS_REGION }} 

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR variables
        id: ecr-vars
        run: |
          AWS_ECR_REGISTRY=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          AWS_ECR_IMAGE_NAME=danielmanciu/market-app-server
          AWS_ECR_IMAGE_VERSION=${{ github.ref_name }}

          echo "aws_ecr_registry=${AWS_ECR_REGISTRY}" >> "$GITHUB_OUTPUT"
          echo "aws_ecr_image_name=${AWS_ECR_IMAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "aws_ecr_repository_tag=${AWS_ECR_REGISTRY}/${AWS_ECR_IMAGE_NAME}:${AWS_ECR_IMAGE_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server/market-app
          push: true
          tags: ${{ steps.ecr-vars.outputs.aws_ecr_repository_tag }}

  upload-to-s3:
    name: Upload docker-compose.yml and nginx.conf to S3 
    needs: [docker-build-and-push-car-app, docker-build-and-push-market-app]
    runs-on: ubuntu-latest

    env:
      S3_BUCKET_NAME: market-app-s3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionRole
          aws-region: ${{ env.AWS_REGION }} 

      - name: Update docker-compose.yml with new repository tags
        run: |
          sed -i "s|image: ${{ needs.docker-build-and-push-car-app.outputs.aws_ecr_car_app_image_name }}:.*|image: ${{ needs.docker-build-and-push-car-app.outputs.aws_ecr_car_app_repository_tag }}|" docker-compose.yml
          sed -i "s|image: ${{ needs.docker-build-and-push-market-app.outputs.aws_ecr_market_app_image_name }}:.*|image: ${{ needs.docker-build-and-push-market-app.outputs.aws_ecr_market_app_repository_tag }}|" docker-compose.yml
          #TODO
          cat docker-compose.yml

      - name: Upload docker-compose.yml to S3
        run: |
          aws s3 cp docker-compose.yml s3://${{ env.S3_BUCKET_NAME }}/docker/docker-compose.yml --metadata "version=${{ github.ref_name }}"

      - name: Upload nginx.conf to S3
        run: |
          aws s3 cp nginx/nginx.conf s3://${{ env.S3_BUCKET_NAME }}/nginx/nginx.conf --metadata "version=${{ github.ref_name }}"
